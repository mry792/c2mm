# This starter workflow is for a CMake project running on a single platform.
# There is a different starter workflow if you need cross-platform coverage.
# See:
# https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Pull Request Validation

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo,
  # etc.)
  BUILD_TYPE: Release

jobs:
  build-and-test:
    # The CMake configure and build commands are platform agnostic and should
    # work equally well on Windows or Mac. You can convert this to a matrix
    # build if you need cross-platform coverage. See:
    # https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash --login -eo pipefail {0}

    container:
      image: ghcr.io/mry792/cpp-build:latest

    steps:
    - uses: actions/checkout@v4
      with:
        filter: tree:0
        fetch-depth: 0

    # - name: Get Conan
    #   uses: turtlebrowser/get-conan@v1.2
    #   with:
    #     version: 1.58.0

    # - name: Configure Conan
    #   run: |
    #     conan profile new --detect default
    #     conan profile show default
    #     conan profile update settings.compiler.libcxx=libstdc++11 default

    # - name: DEBUG
    #   run: git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(auto)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
    # - name: Checkout Brokkr
    #   uses: actions/checkout@v4
    #   with:
    #     repository: mry792/brokkr
    #     ref: v0.2.2
    #     path: extern/brokkr
    #     filter: tree:0
    #     fetch-depth: 0

    - name: Get Brokkr
      uses: robinraju/release-downloader@v1.8
      with:
        repository: mry792/brokkr
        tag: v0.2.3
        out-file-path: extern-brokkr
        tarBall: true
        extract: true

    - name: Build Brokkr
      run: |
        pushd extern-brokkr/mry792-brokkr-*
        conan create . brokkr/0.2.3@egoss/stable
        popd
        rm -r extern-brokkr

    - name: Create Package
      run: conan create .

    # - name: Configure CMake
    #   # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
    #   # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
    #   run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    # - name: Build
    #   # Build your program with the given configuration
    #   run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    # - name: Test
    #   working-directory: ${{github.workspace}}/build
    #   # Execute tests defined by the CMake configuration.
    #   # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
    #   run: ctest -C ${{env.BUILD_TYPE}}

